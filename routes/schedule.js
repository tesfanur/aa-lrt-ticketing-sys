/**
*Load module dependecies
*/
var express = require('express');
/**
*Load local module dependecies
*/
var scheduleController = require('../controllers/schedule');

var router = express.Router();
// ------------------------------------------------------------------------------------------
// Schedule Success Response
// ------------------------------------------------------------------------------------------
/**
 * @apiDefine ScheduleSuccess
 * @apiSuccess {String} stationId The id of train Schedule
 * @apiSuccess {Object} createdBy The name of admin user who created the shedule
 * @apiSuccess {String} trainId Unique id of train
 * @apiSuccess {Date} arrivalTime The arrival time of train at Schedule with id of stationId
 * @apiSuccess {Date} departureTime The departure time of train from Schedule with id of stationId
*/
// ------------------------------------------------------------------------------------------
// Invalid Schedule Id Response
// ------------------------------------------------------------------------------------------
/**
* @apiDefine InvalidScheduleIdError
* @apiVersion 0.1.0
*
* @apiErrorInvalidScheduleId InvalidScheduleId Valid Schedule Id 24 by mongodb autogenerated generated Id
*
* @apiErrorExample  Invalid-Schedule-Id-Response:
* HTTP 400 Bad request
*{
    "message": "Schedule Id is not valid"
}
*
*/
// ------------------------------------------------------------------------------------------
// Schedule Not Found Error Response
// ------------------------------------------------------------------------------------------
/**
* @apiDefine ScheduleNotFoundError
* @apiVersion 0.1.0
*
* @apiErrorScheduleNotFound ScheduleNotFound Error generated if Schedule not found
*
* @apiErrorExample  Schedule-Not-Found-Response:
** HTTP 400 Bad request
*{
*    "message": "No maching document found."
*}
*
*/
// ------------------------------------------------------------------------------------------
// Server Error Response
// ------------------------------------------------------------------------------------------
/**
* @apiDefine InternalServerError
* @apiVersion 0.1.0
*
* @apiErrorInternalServerError InternalServerError Error response for internal server errors
*
* @apiErrorExample  Internal-Server-Error-Response:
** HTTP 500 Bad request
*{
*    "message": "Internal Server Error."
*}
*
*/

/**
 * @apiDefine ScheduleCreationSuccess
 * @apiSuccess(Success 201)  {String} stationId The id of train Schedule
 * @apiSuccess(Success 201)  {Object} createdBy The name of admin user who created the shedule
 * @apiSuccess(Success 201)  {String} trainId Unique id of train
 * @apiSuccess(Success 201)  {Date} arrivalTime The arrival time of train at Schedule with id of stationId
 * @apiSuccess(Success 201)  {Date} departureTime The departure time of train from Schedule with id of stationId
*/
// ------------------------------------------------------------------------------------------
// Current Permissions.
// ------------------------------------------------------------------------------------------
/**
 * @apiDefine UnauthorizedError
 * @apiVersion 0.1.0
 *
 * @apiError Unauthorized Only authenticated users can access the endpoint.
 *
 * @apiErrorExample  Unauthorized-Error-Response:
 *     HTTP 401 Unauthorized
 *     {
 *      "message":"Access denied"
 *     }
 */

/**
 * @api {POST} /schedules/ Create schedule
 * @apiName postSchedule
 * @apiGroup Schedule
 * @apiDescription Creates a new Schedule
 * @apiVersion 0.1.0
 *
 * @apiUse ScheduleCreationSuccess
 *
 * @apiParamExample {json} Request-Example
 *
 {

    "stationId" : "5a74264fc461a418b08dae07",
    "trainId" : "AALRT-T-01",
    "arrivalTime" :"5:00",
    "departureTime" : "5:01"
}
 *
 * @apiSuccessExample Response-Success-Example
 *HTTP 200 OK
 {
    "_id": "5a9bea8c9b212d3904716546",
    "createdBy": "5a8157014d99ed52700bc99f",
    "trainId": "AALRT-T-01",
    "arrivalTime": "04-Mar-2018 05:00 AM",
    "departureTime": "04-Mar-2018 05:01 AM",
    "createdAt": "04-Mar-2018 03:46 PM",
    "modifiedAt": "04-Mar-2018 03:46 PM",
    "request": {
        "method": "POST",
        "url": "http://localhost/schedules"
    }
}
 *@apiUse UnauthorizedError
 @apiUse InternalServerError
 */
router.post('/', scheduleController.create);
/**
 * @api {GET} /schedules/ Find All Schedules
 * @apiName FindAllSchedules
 * @apiGroup Schedule
 * @apiDescription list all registerd Schedules
 * @apiVersion 0.1.0
 *
 * @apiUse ScheduleSuccess
 *
 * @apiSuccessExample{json} Response-Success-Example
  *
  *HTTP 200 OK
  * {
    "scheduleCount": 6,
    "schedules": [
        {
            "_id": "5a9bea8c9b212d3904716546",
            "createdBy": "5a8157014d99ed52700bc99f",
            "trainId": "AALRT-T-01",
            "arrivalTime": "04-Mar-2018 05:00 AM",
            "departureTime": "04-Mar-2018 05:01 AM",
            "createdAt": "04-Mar-2018 03:46 PM",
            "modifiedAt": "04-Mar-2018 03:46 PM",
            "request": {
                "method": "GET",
                "url": "http://localhost/schedules"
            }
        },
        {
            "_id": "5a9bea7d9b212d3904716545",
            "createdBy": "5a8157014d99ed52700bc99f",
            "trainId": "AALRT-T-01",
            "arrivalTime": "04-Mar-2018 05:00 AM",
            "departureTime": "04-Mar-2018 05:01 AM",
            "createdAt": "04-Mar-2018 03:45 PM",
            "modifiedAt": "04-Mar-2018 03:45 PM",
            "request": {
                "method": "GET",
                "url": "http://localhost/schedules"
            }
        },
        {
            "_id": "5a9bea2c69a5a544c49071be",
            "createdBy": "5a8157014d99ed52700bc99f",
            "trainId": "AALRT-T-01",
            "arrivalTime": "04-Mar-2018 05:00 AM",
            "departureTime": "04-Mar-2018 05:01 AM",
            "createdAt": "04-Mar-2018 03:44 PM",
            "modifiedAt": "04-Mar-2018 03:44 PM",
            "request": {
                "method": "GET",
                "url": "http://localhost/schedules"
            }
        },
        {
            "_id": "5a9bea0369a5a544c49071bd",
            "createdBy": "5a8157014d99ed52700bc99f",
            "trainId": "AALRT-T-01",
            "arrivalTime": "04-Mar-2018 05:00 AM",
            "departureTime": "04-Mar-2018 05:01 AM",
            "createdAt": "04-Mar-2018 03:43 PM",
            "modifiedAt": "04-Mar-2018 03:43 PM",
            "request": {
                "method": "GET",
                "url": "http://localhost/schedules"
            }
        },
        {
            "_id": "5a9be79f150cee41286b723a",
            "createdBy": "5a8157014d99ed52700bc99f",
            "trainId": "AALRT-T-01",
            "arrivalTime": "04-Mar-2018 05:00 AM",
            "departureTime": "04-Mar-2018 05:01 AM",
            "createdAt": "04-Mar-2018 03:33 PM",
            "modifiedAt": "04-Mar-2018 03:33 PM",
            "request": {
                "method": "GET",
                "url": "http://localhost/schedules"
            }
        },
        {
            "_id": "5a9be738ab9886334cf66f63",
            "createdBy": "5a8157014d99ed52700bc99f",
            "trainId": "AALRT-T-01",
            "arrivalTime": "04-Mar-2018 05:00 AM",
            "departureTime": "04-Mar-2018 05:01 AM",
            "createdAt": "04-Mar-2018 03:31 PM",
            "modifiedAt": "04-Mar-2018 03:31 PM",
            "request": {
                "method": "GET",
                "url": "http://localhost/schedules"
            }
        }
    ]
}
  *@apiUse ScheduleNotFoundError
  *@apiUse UnauthorizedError
  @apiUse InternalServerError
 */

router.get('/', scheduleController.findAll);
/**
 * @api {GET} /schedules/paginate Paginated Schedules List
 * @apiName FindAllSchedulesAndPaginate
 * @apiGroup Schedule
 * @apiDescription List all registerd schedules by pagination
 * @apiVersion 0.1.0
 *
 * @apiUse ScheduleSuccess
 *
 * @apiSuccessExample{json} Response-Success-Example
  *
  *HTTP 200 OK
  {
      "page": 1,
      "total_docs": 6,
      "total_pages": 1,
      "per_page": 10,
      "docs": [
          {
              "_id": "5a9be738ab9886334cf66f63",
              "createdBy": "5a8157014d99ed52700bc99f",
              "trainId": "AALRT-T-01",
              "stationId": "5a74264fc461a418b08dae07",
              "arrivalTime": "2018-03-04T02:00:00.000Z",
              "departureTime": "2018-03-04T02:01:00.000Z",
              "__v": 0,
              "modifiedAt": "2018-03-04T12:31:52.206Z",
              "createdAt": "2018-03-04T12:31:52.206Z"
          },
          {
              "_id": "5a9be79f150cee41286b723a",
              "createdBy": "5a8157014d99ed52700bc99f",
              "trainId": "AALRT-T-01",
              "stationId": "5a74264fc461a418b08dae07",
              "arrivalTime": "2018-03-04T02:00:00.000Z",
              "departureTime": "2018-03-04T02:01:00.000Z",
              "__v": 0,
              "modifiedAt": "2018-03-04T12:33:35.620Z",
              "createdAt": "2018-03-04T12:33:35.620Z"
          },
          {
              "_id": "5a9bea0369a5a544c49071bd",
              "createdBy": "5a8157014d99ed52700bc99f",
              "trainId": "AALRT-T-01",
              "stationId": "5a74264fc461a418b08dae07",
              "arrivalTime": "2018-03-04T02:00:00.000Z",
              "departureTime": "2018-03-04T02:01:00.000Z",
              "__v": 0,
              "modifiedAt": "2018-03-04T12:43:47.708Z",
              "createdAt": "2018-03-04T12:43:47.708Z"
          },
          {
              "_id": "5a9bea2c69a5a544c49071be",
              "createdBy": "5a8157014d99ed52700bc99f",
              "trainId": "AALRT-T-01",
              "stationId": "5a74264fc461a418b08dae07",
              "arrivalTime": "2018-03-04T02:00:00.000Z",
              "departureTime": "2018-03-04T02:01:00.000Z",
              "__v": 0,
              "modifiedAt": "2018-03-04T12:44:28.516Z",
              "createdAt": "2018-03-04T12:44:28.516Z"
          },
          {
              "_id": "5a9bea7d9b212d3904716545",
              "createdBy": "5a8157014d99ed52700bc99f",
              "trainId": "AALRT-T-01",
              "stationId": "5a74264fc461a418b08dae07",
              "arrivalTime": "2018-03-04T02:00:00.000Z",
              "departureTime": "2018-03-04T02:01:00.000Z",
              "__v": 0,
              "modifiedAt": "2018-03-04T12:45:49.072Z",
              "createdAt": "2018-03-04T12:45:49.072Z"
          },
          {
              "_id": "5a9bea8c9b212d3904716546",
              "createdBy": "5a8157014d99ed52700bc99f",
              "trainId": "AALRT-T-01",
              "stationId": "5a74264fc461a418b08dae07",
              "arrivalTime": "2018-03-04T02:00:00.000Z",
              "departureTime": "2018-03-04T02:01:00.000Z",
              "__v": 0,
              "modifiedAt": "2018-03-04T12:46:04.657Z",
              "createdAt": "2018-03-04T12:46:04.657Z"
          }
      ]
  }
  *@apiUse ScheduleNotFoundError
  *@apiUse UnauthorizedError
  *@apiUse InternalServerError
 */

router.get('/paginate', scheduleController.paginate);
/**
 * @api {get} /schedules/search/:name  Search By Schedule Name
 * @apiVersion 0.1.0
 * @apiName SearchSchedule
 * @apiGroup Schedule
 * @apiPermission authenticated user
 *
 *
 *@apiDescription Search schedule by their name
 * @apiParam {String} id The schedule id
 *
 * @apiExample {js} Request-Example:
 * $http.header("Authorization") = jwtwebtoken;
 *
 * @apiSuccess {String} _id The schedule id
 * @apiSuccess {String} name The schedule name
 *
 * @apiSuccessExample {json} Response-Success-Example:
  *     HTTP 200 OK
  *     {
  *        "_id": "57e8e94ea06a0c473bac50cc",
  *        "name": "Do the disehs",
  *        "__v": 0
  *      }
  *
  * @apiUse ScheduleNotFoundError
  * @apiUse UnauthorizedError
  *@apiUse InternalServerError
 */
router.get('/search/:name', scheduleController.searchByName);
  /**
   * @api {get} /schedules/:id  Get Schedule By Id
   * @apiVersion 0.1.0
   * @apiName GetSchedule
   * @apiGroup Schedule
   * @apiPermission authenticated user
   *
   *
   * http://localhost:5000/schedules/5a9bea8c9b212d3904716546
   *
   *@apiDescription Retrieve schedule by their Id
   * @apiParam {String} id The schedule id
   *
   * @apiExample {js} Request-Example:
   * $http.header("Authorization") = jwtwebtoken;
   *
   * @apiSuccess {String} _id The schedule id
   * @apiSuccess {String} name The schedule name
   *
   * @apiSuccessExample {json} Response-Success-Example:
    *  HTTP 200 OK
    {
    "_id": "5a9bea8c9b212d3904716546",
    "createdBy": "5a8157014d99ed52700bc99f",
    "trainId": "AALRT-T-01",
    "arrivalTime": "04-Mar-2018 05:00 AM",
    "departureTime": "04-Mar-2018 05:01 AM",
    "createdAt": "04-Mar-2018 03:46 PM",
    "modifiedAt": "04-Mar-2018 03:46 PM",
    "request": {
        "method": "GET",
        "url": "http://localhost/schedules/5a9bea8c9b212d3904716546"
    }
}
    *@apiUse InvalidScheduleIdError
    *@apiUse UnauthorizedError
    *@apiUse ScheduleNotFoundError
    *@apiUse InternalServerError
   */
router.get('/:id', scheduleController.findById);
/**
 * @api {get} /schedules/:cid  Find Schedule By Custom Id
 * @apiVersion 0.1.0
 * @apiName findSchedule
 * @apiGroup Schedule
 * @apiPermission authenticated user
 *
 *
 * http://localhost:5000/schedules/211
 *
 *@apiDescription Find schedule by their custom Id
 * @apiParam {String} id The schedule id
 *
 * @apiExample {js} Request-Example:
* $http.header("Authorization") = jwtwebtoken;
 *
 * @apiSuccess {String} _id The schedule id
 * @apiSuccess {String} name The schedule name
 *
 * @apiSuccessExample {json} Response-Success-Example:
  *     HTTP 200 OK
  {
      "_id": "5a8415c0542c19147c03c52f",
      "createdBy": {
          "_id": "5a80496050df3044fcf084fd",
          "email": "tarikuwa.abeje@gmail.com",
          "phone": "251-917-123456",
          "userType": "passenger",
          "createdAt": "2018-02-11T13:47:00.000Z",
          "modifiedAt": "2018-02-11T13:47:00.000Z"
      },
      "scheduleId": 211,
      "name": "Nefas Silik 2",
      "route": "NS",
      "longitude": 38.7614768999999,
      "latitude": 9.0109684,
      "createdAt": "14-Feb-2018 01:56 PM",
      "modifiedAt": "14-Feb-2018 01:56 PM",
      "request": {
          "method": "GET",
          "url": "http://localhost/schedules/customid/211"
      }
  }
  *
  * @apiUse UnauthorizedError
  *@apiUse InternalServerError
 */
router.get('/customid/:cid', scheduleController.findByCustomId);

 /**
  * @api {put} /schedules/:id Update Schedule
  * @apiName putSchedule
  * @apiGroup Schedule
  * @apiDescription Update Schedule
  * @apiVersion 0.1.0
  * @apiPermission admin
  *
  * @apiUse ScheduleSuccess
  *
  * @apiParamExample {json} Request-Example
  *     {
  *       "id": "5a83fa1b1104c34bd8a66e72"
  *     }
  *
  * @apiRequestExample Request-Example
  *{
  *    "scheduleId": "27",
  *    "name":"Abo Junction",
  *    "longitude": 38.7706822,
  *    "latitude": 8.9451405,
  *    "route": "NS"
  *}
  *@apiSuccessExample Response-Success-Example
  *{
  *  "_id": "5a83fa1b1104c34bd8a66e72",
  *  "createdBy": "5a80496050df3044fcf084fd",
  *  "scheduleId": 27,
  *  "name": "Abo Junction",
  *  "route": "NS",
  *  "longitude": 38.7706822,
  *  "latitude": 8.9451405,
  *  "createdAt": "14-Feb-2018 11:58 AM",
  *  "modifiedAt": "28-Feb-2018 11:19 AM",
  *  "request": {
  *      "method": "PUT",
  *      "url": "http://localhost/schedules/5a83fa1b1104c34bd8a66e72"
  *  }
  *}
  *@apiUse UnauthorizedError
  *@apiUse InternalServerError
  */
router.put('/:id', scheduleController.update);

 /**
  * @api {delete} /schedules/:id Delete Schedule
  * @apiName deleteSchedule
  * @apiGroup Schedule
  * @apiDescription Delete schedule by id
  * @apiVersion 0.1.0
  * @apiUse ScheduleSuccess
  *
  * @apiParamExample {json} Request-Example
  *
  *     {
  *       "id": "5a96591a2d8b790b8c9bc243"
  *     }
  *
  *@apiSuccessExample Response-Success-Example
  *HTTP 200 OK
  * {
  * "message":"schedule removed successfully",
  * {
  *   "_id": "5a96591a2d8b790b8c9bc243",
  *   "createdBy": "5a8157014d99ed52700bc99f",
  *   "scheduleId": 10200509513304,
  *   "name": "Gurd Shola 2",
  *   "route": "EW",
  *   "longitude": 38.8139838,
  *   "latitude": 9.0158921,
  *   "createdAt": "28-Feb-2018 10:24 AM",
  *   "modifiedAt": "28-Feb-2018 10:24 AM",
  *   "request": {
  *       "method": "POST",
  *       "url": "http://localhost/schedules"
  *   }
  *}
  *}
  *@apiUse UnauthorizedError
  *@apiUse ScheduleNotFoundError
  *@apiUse InternalServerError
  */
router.delete('/:id', scheduleController.delete);

module.exports = router;
