/**
*Load module dependecies
*/
var express = require('express');
/**
*Load local module dependecies
*/
var stationController = require('../controllers/station');

var router = express.Router();
// ------------------------------------------------------------------------------------------
// Station Success Response
// ------------------------------------------------------------------------------------------
/**
 * @apiDefine StationSuccess
 * @apiSuccess {String} name The name of train Station
 * @apiSuccess {Object} createdBy The name of admin user who created the Station
 * @apiSuccess {Number} stationId custom Unique id of train Station(the first digit refers to route. 1 for EW & 2 for NS route)
 * @apiSuccess {String} route The route of train Station
 * @apiSuccess {Number} latitude The latitude of train station
 * @apiSuccess {Number} longitude The longitude of train sation
*/
// ------------------------------------------------------------------------------------------
// Invalid Sation Id Response
// ------------------------------------------------------------------------------------------
/**
* @apiDefine InvalidSationIdError
* @apiVersion 0.1.0
*
* @apiErrorInvalidSationId InvalidSationId Valid Station Id 24 by mongodb autogenerated generated Id
*
* @apiErrorExample  Invalid-Sation-Id-Response:
*{
    "message": "Station Id is not valid"
}
*
*/
// ------------------------------------------------------------------------------------------
// Sation Not Found Error Response
// ------------------------------------------------------------------------------------------
/**
* @apiDefine SationNotFoundError
* @apiVersion 0.1.0
*
* @apiErrorSationNotFound SationNotFound Error generated if Station not found
*
* @apiErrorExample  Sation-Not-Found-Response:
*{
*    "message": "No maching document found."
*}
*
*/

/**
 * @apiDefine StationCreationSuccess
 * @apiSuccess(Success 201) {String} name The name of train Station
 * @apiSuccess(Success 201) {Object} createdBy The name of admin user who created the Station
 * @apiSuccess(Success 201) {Number} stationId custom Unique id of train Station(the first digit refers to route. 1 for EW & 2 for NS route)
 * @apiSuccess(Success 201) {String} route The route of train Station
 * @apiSuccess(Success 201) {Number} latitude The latitude of train station
 * @apiSuccess(Success 201) {Number} longitude The longitude of train sation
*/
// ------------------------------------------------------------------------------------------
// Current Permissions.
// ------------------------------------------------------------------------------------------
/**
 * @apiDefine UnauthorizedError
 * @apiVersion 0.1.0
 *
 * @apiError Unauthorized Only authenticated users can access the endpoint.
 *
 * @apiErrorExample  Unauthorized response:
 *     HTTP 401 Unauthorized
 *     {
 *      "message":"Access forbidden"
 *     }
 */

/**
 * @api {POST} /stations/ Create station
 * @apiName postStation
 * @apiGroup Station
 * @apiDescription Creates a new Station
 *
 * @apiParam {String} name The name of train Station
 * @apiParam {Number} stationId custom Unique id of train Station
 * @apiParam {String} route The route of train Station
 * @apiParam {Number} latitude The latitude of train station
 * @apiParam {Number} longitude The longitude of train sation
 *
 * @apiUse StationCreationSuccess
 *
 * @apiParamExample {json} Request-Example
 *
 *{
 *  "stationId": "17",
 *  "name": "Gurd Shola 1211",
 *  "latitude":9.0158921,
 *  "longitude": 38.8139838,
 *  "route" :"EW"
 *}
 *
 * @apiSuccessExample Response-Example
 *
 *{
 *   "_id": "5a96591a2d8b790b8c9bc243",
 *   "createdBy": "5a8157014d99ed52700bc99f",
 *   "stationId": 10200509513304,
 *   "name": "Gurd Shola 2",
 *   "route": "EW",
 *   "longitude": 38.8139838,
 *   "latitude": 9.0158921,
 *   "createdAt": "28-Feb-2018 10:24 AM",
 *   "modifiedAt": "28-Feb-2018 10:24 AM",
 *   "request": {
 *       "method": "POST",
 *       "url": "http://localhost/stations"
 *   }
 *}
 */
router.post('/', stationController.create);
/**
 * @api {GET} /stations/ find all stations
 * @apiName FindAllStations
 * @apiGroup Station
 * @apiDescription list all registerd Stations
 * @apiVersion 0.1.0
 *
 * @apiUse StationSuccess
 *
 * @apiSuccessExample{json} Response-Example
 *
  * {
  *  "stationCount": 56,
  *  "stations": [
  *      {
  *          "_id": "5a96591a2d8b790b8c9bc243",
  *          "createdBy": {
  *              "_id": "5a8157014d99ed52700bc99f",
  *              "email": "ayele.gobeze@gmail.com",
  *              "phone": "251-917-123456",
  *              "userType": "passenger",
  *              "createdAt": "2018-02-12T08:57:00.000Z",
  *              "modifiedAt": "2018-02-12T08:57:00.000Z"
  *          },
  *          "stationId": 10200509513304,
  *          "name": "Gurd Shola 1211",
  *          "route": "EW",
  *          "longitude": 38.8139838,
  *          "latitude": 9.0158921,
  *          "createdAt": "28-Feb-2018 10:24 AM",
  *          "modifiedAt": "28-Feb-2018 10:24 AM",
  *          "request": {
  *              "method": "GET",
  *              "url": "http://localhost/stations"
  *          }
  *      },
  {
           "_id": "5a83e4c24f018d281460fb9d",
           "createdBy": {
               "_id": "5a80496050df3044fcf084fd",
               "email": "tarikuwa.abeje@gmail.com",
               "phone": "251-917-123456",
               "userType": "passenger",
               "createdAt": "2018-02-11T13:47:00.000Z",
               "modifiedAt": "2018-02-11T13:47:00.000Z"
           },
           "stationId": 19,
           "name": "Megenagna",
           "route": "EW",
           "longitude": 38.8024029,
           "latitude": 9.0204692,
           "createdAt": "14-Feb-2018 10:26 AM",
           "modifiedAt": "14-Feb-2018 10:26 AM",
           "request": {
               "method": "GET",
               "url": "http://localhost/stations"
           }
       }
  *]
  *}
  *@apiUse SationNotFoundError
  *@apiUse UnauthorizedError
 */

router.get('/', stationController.findAll);
/**
 * @api {GET} /stations/paginate List all stations and Paginate
 * @apiName FindAllStationsAndPaginate
 * @apiGroup Station
 * @apiDescription list all registerd Stations by pagination
 * @apiVersion 0.1.0
 *
 * @apiUse StationSuccess
 *
 * @apiSuccessExample{json} Response-Example
 *
  * {
  *  "page": 1,
    "total_docs": 56,
    "total_pages": 6,
    "per_page": 10,
    "docs": [
  *      {
  *          "_id": "5a96591a2d8b790b8c9bc243",
  *          "createdBy": {
  *              "_id": "5a8157014d99ed52700bc99f",
  *              "email": "ayele.gobeze@gmail.com",
  *              "phone": "251-917-123456",
  *              "userType": "passenger",
  *              "createdAt": "2018-02-12T08:57:00.000Z",
  *              "modifiedAt": "2018-02-12T08:57:00.000Z"
  *          },
  *          "stationId": 10200509513304,
  *          "name": "Gurd Shola 1211",
  *          "route": "EW",
  *          "longitude": 38.8139838,
  *          "latitude": 9.0158921,
  *          "createdAt": "28-Feb-2018 10:24 AM",
  *          "modifiedAt": "28-Feb-2018 10:24 AM",
  *          "request": {
  *              "method": "GET",
  *              "url": "http://localhost/stations"
  *          }
  *      },
  {
           "_id": "5a83e4c24f018d281460fb9d",
           "createdBy": {
               "_id": "5a80496050df3044fcf084fd",
               "email": "tarikuwa.abeje@gmail.com",
               "phone": "251-917-123456",
               "userType": "passenger",
               "createdAt": "2018-02-11T13:47:00.000Z",
               "modifiedAt": "2018-02-11T13:47:00.000Z"
           },
           "stationId": 19,
           "name": "Megenagna",
           "route": "EW",
           "longitude": 38.8024029,
           "latitude": 9.0204692,
           "createdAt": "14-Feb-2018 10:26 AM",
           "modifiedAt": "14-Feb-2018 10:26 AM",
           "request": {
               "method": "GET",
               "url": "http://localhost/stations"
           }
       }
  *]
  *}
  *@apiUse SationNotFoundError
  *@apiUse UnauthorizedError
 */

router.get('/paginate', stationController.paginate);
/**
 * @api {get} /stations/search/:name  Search Station
 * @apiVersion 0.1.0
 * @apiName SearchStation
 * @apiGroup Station
 * @apiPermission authenticated user
 *
 *
 *@apiDescription Search station by their name
 * @apiParam {String} id The station id
 *
 * @apiExample {js} Request-Example:
 * $http.defaults.headers.common["Authorization"] = token;
 * $http.get(url)
 *   .success((res, status) => doSomethingHere())
 *   .error((err, status) => doSomethingHere());
 *
 * @apiSuccess {String} _id The station id
 * @apiSuccess {String} name The station name
 *
 * @apiSuccessExample {json} Success response:
  *     HTTPS 200 OK
  *     {
  *        "_id": "57e8e94ea06a0c473bac50cc",
  *        "name": "Do the disehs",
  *        "__v": 0
  *      }
  *
  *@apiUse SationNotFoundError
  * @apiUse UnauthorizedError
 */
router.get('/search/:name', stationController.searchByName);
  /**
   * @api {get} /stations/:id  Get Station By Id
   * @apiVersion 0.1.0
   * @apiName GetStation
   * @apiGroup Station
   * @apiPermission authenticated user
   *
   *
   * http://localhost:5000/stations/5a478c962698af267483b1ee
   *
   *@apiDescription Retrieve station by their Id
   * @apiParam {String} id The station id
   *
   * @apiExample {js} Request-Example:
   * $http.defaults.headers.common["Authorization"] = token;
   * $http.get(url)
   *   .success((res, status) => doSomethingHere())
   *   .error((err, status) => doSomethingHere());
   *
   * @apiSuccess {String} _id The station id
   * @apiSuccess {String} name The station name
   *
   * @apiSuccessExample {json} Success response:
    *     HTTPS 200 OK
    *     {
    *        "_id": "57e8e94ea06a0c473bac50cc",
    *        "name": "Do the disehs",
    *        "__v": 0
    *      }
    *@apiUse InvalidSationIdError
    * @apiUse UnauthorizedError
    *@apiUse SationNotFoundError
   */
router.get('/:id', stationController.findById);
/**
 * @api {get} /stations/:cid  Find Station By custom Id
 * @apiVersion 0.1.0
 * @apiName findStation
 * @apiGroup Station
 * @apiPermission authenticated user
 *
 *
 * http://localhost:5000/stations/211
 *
 *@apiDescription Find station by their custom Id
 * @apiParam {String} id The station id
 *
 * @apiExample {js} Request-Example:
 * $http.defaults.headers.common["Authorization"] = token;
 * $http.get(url)
 *   .success((res, status) => doSomethingHere())
 *   .error((err, status) => doSomethingHere());
 *
 * @apiSuccess {String} _id The station id
 * @apiSuccess {String} name The station name
 *
 * @apiSuccessExample {json} Success response:
  *     HTTPS 200 OK
  {
      "_id": "5a8415c0542c19147c03c52f",
      "createdBy": {
          "_id": "5a80496050df3044fcf084fd",
          "email": "tarikuwa.abeje@gmail.com",
          "phone": "251-917-123456",
          "userType": "passenger",
          "createdAt": "2018-02-11T13:47:00.000Z",
          "modifiedAt": "2018-02-11T13:47:00.000Z"
      },
      "stationId": 211,
      "name": "Nefas Silik 2",
      "route": "NS",
      "longitude": 38.7614768999999,
      "latitude": 9.0109684,
      "createdAt": "14-Feb-2018 01:56 PM",
      "modifiedAt": "14-Feb-2018 01:56 PM",
      "request": {
          "method": "GET",
          "url": "http://localhost/stations/customid/211"
      }
  }
  *
  * @apiUse UnauthorizedError
 */
router.get('/customid/:cid', stationController.findByCustomId);

 /**
  * @api {put} /stations/:id Update Station
  * @apiName putStation
  * @apiGroup Station
  * @apiDescription Update Station
  * @apiVersion 0.1.0
  * @apiPermission admin
  *
  * @apiUse StationSuccess
  *
  * @apiParamExample {json} Request-Example
  *     {
  *       "id": "5a83fa1b1104c34bd8a66e72"
  *     }
  *
  * @apiRequestExample Request-Example
  *{
  *    "stationId": "27",
  *    "name":"Abo Junction",
  *    "longitude": 38.7706822,
  *    "latitude": 8.9451405,
  *    "route": "NS"
  *}
  *@apiSuccessExample Response-Success-Example
  *{
  *  "_id": "5a83fa1b1104c34bd8a66e72",
  *  "createdBy": "5a80496050df3044fcf084fd",
  *  "stationId": 27,
  *  "name": "Abo Junction",
  *  "route": "NS",
  *  "longitude": 38.7706822,
  *  "latitude": 8.9451405,
  *  "createdAt": "14-Feb-2018 11:58 AM",
  *  "modifiedAt": "28-Feb-2018 11:19 AM",
  *  "request": {
  *      "method": "PUT",
  *      "url": "http://localhost/stations/5a83fa1b1104c34bd8a66e72"
  *  }
  *}
  *@apiUse UnauthorizedError
  */
router.put('/:id', stationController.update);

 /**
  * @api {delete} /stations/:id Delete Station
  * @apiName deleteStation
  * @apiGroup Station
  * @apiDescription deletes a user
  * @apiVersion 0.1.0
  * @apiUse StationSuccess
  *
  * @apiParamExample {json} Request-Example
  *
  *     {
  *       "id": "5a96591a2d8b790b8c9bc243"
  *     }
  *
  * @apiResponseExample Response-Example
  *
  * {
  * {"message":"station removed successfully"},
  * {
  *   "_id": "5a96591a2d8b790b8c9bc243",
  *   "createdBy": "5a8157014d99ed52700bc99f",
  *   "stationId": 10200509513304,
  *   "name": "Gurd Shola 2",
  *   "route": "EW",
  *   "longitude": 38.8139838,
  *   "latitude": 9.0158921,
  *   "createdAt": "28-Feb-2018 10:24 AM",
  *   "modifiedAt": "28-Feb-2018 10:24 AM",
  *   "request": {
  *       "method": "POST",
  *       "url": "http://localhost/stations"
  *   }
  *}
  *}
  *@apiUse UnauthorizedError
  */
router.delete('/:id', stationController.delete);

module.exports = router;
