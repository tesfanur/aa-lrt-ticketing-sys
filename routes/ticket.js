/**
*Load third party module dependecies
*/
var express = require('express');
/**
*Load ticket controller module
*/
var ticketController = require('../controllers/ticket');

var router = express.Router();
//------------------------------------------------------------------------------------------
// Ticket Success Response
// ------------------------------------------------------------------------------------------
/**
 * @apiDefine TicketSuccess
 * @apiSuccess {Object} _id      A Unique id of Ticket document
 * @apiSuccess {Object} from     The starting/source station autogenerated mongodb id
 * @apiSuccess {Object} to       The  ending/destination  station autogenerated mongodb  id
 * @apiSuccess {Number} from.stationId     The starting/source station custom id
 * @apiSuccess {Number} to.stationId       The  ending/destination  station custom  id
 * @apiSuccess {String} route    The route where the passenger want to travel
 * @apiSuccess {Object} passenger The Ticket owner/passenger Object
 * @apiSuccess {Number} price The price of the ticket
 * @apiSuccess {Date} createdAt The Date time when Ticket bought
 * @apiSuccess {String} status The status of Ticket usage[unused, used, cancelled]
  * @apiSuccess {String} type The type of ticket[default: for adult]
*/
// ------------------------------------------------------------------------------------------
// Invalid Ticket Id Response
// ------------------------------------------------------------------------------------------
/**
* @apiDefine InvalidTicketIdError
* @apiVersion 0.1.0
*
* @apiErrorInvalidTicketId InvalidTicketId Valid Ticket Id 24 by mongodb autogenerated generated Id
*
* @apiErrorExample  Invalid-Ticket-Id-Response:
* HTTP 400 Bad request
*{
    "message": "Train Ticket Id is not valid"
}
*
*/
/**
* @apiDefine InvalidTicketIdError
* @apiVersion 0.2.0
*
* @apiErrorInvalidTicketId InvalidTicketId Valid Ticket Id 24 by mongodb autogenerated generated Id
*
* @apiErrorExample  Invalid-Ticket-Id-Response:
* HTTP 400 Bad request
*{
    "query_result": "Ticket Id is not valid"
}
*
*/
// ------------------------------------------------------------------------------------------
// Ticket Not Found Error Response
// ------------------------------------------------------------------------------------------
/**
* @apiDefine TicketNotFoundError
* @apiVersion 0.1.0
*
* @apiErrorTicketNotFound TicketNotFound Error generated if Ticket not found
*
* @apiErrorExample  Ticket-Not-Found-Response:
** HTTP 400 Bad request
*{
*    "message": "No maching document found."
*}
*
*/
// ------------------------------------------------------------------------------------------
// Server Error Response
// ------------------------------------------------------------------------------------------
/**
* @apiDefine InternalServerError
* @apiVersion 0.1.0
*
* @apiErrorInternalServerError InternalServerError Error response for internal server errors
*
* @apiErrorExample  Internal-Server-Error-Response:
** HTTP 500 Bad request
*{
*    "message": "Internal Server Error."
*}
*
*/

/**
 * @apiDefine TicketCreationSuccess
 * @apiSuccess(Success 201) {Object} _id      A Unique id of Ticket document
 * @apiSuccess(Success 201) {Object} from     The starting/source station autogenerated mongodb id
 * @apiSuccess(Success 201) {Object} to       The  ending/destination  station autogenerated mongodb  id
 * @apiSuccess(Success 201) {Number} from.stationId     The starting/source station custom id
 * @apiSuccess(Success 201) {Number} to.stationId       The  ending/destination  station custom  id
 * @apiSuccess(Success 201) {String} route    The route where the passenger want to travel
 * @apiSuccess(Success 201) {Object} passenger The Ticket owner/passenger Object
 * @apiSuccess(Success 201) {Number} price The price of the ticket
 * @apiSuccess(Success 201) {Date} createdAt The Date time when Ticket bought
 * @apiSuccess(Success 201) {String} status The status of Ticket usage[unused, used, cancelled]
  * @apiSuccess(Success 201) {String} type The type of ticket[default: for adult]
*/
// ------------------------------------------------------------------------------------------
// Current Permissions.
// ------------------------------------------------------------------------------------------
/**
 * @apiDefine UnauthorizedError
 * @apiVersion 0.1.0
 *
 * @apiError Unauthorized Only authenticated users can access the endpoint.
 *
 * @apiErrorExample  Unauthorized-Error-Response:
 *     HTTP 401 Unauthorized
 *     {
 *      "message":"Access denied"
 *     }
 */
 /**
  * @apiDefine UnauthorizedError
  * @apiVersion 0.2.0
  *
  * @apiError Unauthorized Only authenticated users can access the endpoint.
  *
  * @apiErrorExample  Unauthorized-Error-Response:
  *     HTTP 401 Unauthorized
  *     {
  *      "query_result":"Access denied"
  *     }
  */

/**
 * @api {POST} /tickets/ Create Ticket
 * @apiName postTicket
 * @apiGroup Ticket
 * @apiDescription Create a new Ticket
 * @apiVersion 0.2.0
 *

 * @apiParam {Object} _id      A Unique id of Ticket document
 * @apiParam {Object} from     The starting/source station custom id
 * @apiParam {Object} to       The  ending/destination  station custom  id
 * @apiParam {String} route    The route where the passenger want to travel
 *
 * @apiUse TicketCreationSuccess
 *
 * @apiParamExample {json} Request-Example
 *
 *{
 *   "route":"NS",
 *   "from": 211,
 *   "to": 226
 *}
 *
 * @apiSuccessExample Response-Success-Example
 *HTTP 200 OK
 {
    "query_result": "U2FsdGVkX19URQVxY83vRJnD6q8yxSc731SV+WkEnrKhXOgDI6kHCaTokTDCDRssFsGwU4G+G+VbElxMbEOFqbpbOQQk4pMXDZgeCl33gw0UGWGABZaDmuODlPxeUUKSgOlPsa8K2OhqdgtR4Ak44HX2ikGtE7Zy5Lktejq6gNQXY0Vq13SzLrVl9YLqq8wbuCsslMQOqLaB6p7uJDdEXFsWo8YO2FKtcsKZ+qgBTCbcUYFxmj9GEbqeimXjImU/6MBYrx4gzDPWHdpa1TOhU9B/Xae8MDr5TQG4iUuAo+g=",
    "decryptedTicket": {
        "passengerId": "5aa296949853f04890757773",
        "sourceEng": "kality",
        "destinationEng": "Menilik II Square",
        "from": 26,
        "to": 227,
        "price": 6,
        "numberOfStationsTravelled": 21,
        "route": "NS",
        "_id": "5aacd4fc1c8b3b42d4b5e52a"
    }
}

 *@apiUse UnauthorizedError
 @apiUse InternalServerError
 */
 /**
  * @api {POST} /tickets/ Create Ticket
  * @apiName postTicket
  * @apiGroup Ticket
  * @apiDescription Create a new Ticket
  * @apiVersion 0.1.0
  *

  * @apiParam {Object} _id      A Unique id of Ticket document
  * @apiParam {Object} from     The starting/source station custom id
  * @apiParam {Object} to       The  ending/destination  station custom  id
  * @apiParam {String} route    The route where the passenger want to travel
  *
  * @apiUse TicketCreationSuccess
  *
  * @apiParamExample {json} Request-Example
  *
  *{
  *   "route":"NS",
  *   "from": 211,
  *   "to": 226
  *}
  *
  * @apiSuccessExample Response-Success-Example
  *HTTP 201 OK
  {
     "encryptedTicket": "U2FsdGVkX19VcFihYHru/VZySuiwKF4yWHEZVCSm5/jbJVmVVI5Fv+CRPe+nOkrWCMboybncLTRqjqvIoV+ReRp5Qe0xa8y3tjt1PGI0vbgInZTuHmss2MwcgMElkBfXmVFU0nadluFnp6MtpJvh9cWWrx8uUy+NvbzE+f/ds8LdCrHJVBnS9DPhD8anBRyggjhinXDc8TAwvcLnEzLR8AXSYNZKehRke/X4vHmzQLKX530O0coRJLxKy45yRov/djYsHTdDmWFw3mYmyxz+mrmCUFQtx7K0aL5+0MqOrP7zcBDqtQuMtDczRrCL6jlinkDwoYVgiUPk76+KWEh8/xASra3C++UC3Zf2tCWDFDgxqlEdubVryhuYYkXoBFTb4OWkBwtU51F55FHt0um02SCjC6uodZMc7Sus8+n4hkH1CJ2fw2h/y3ixEupwJkAzXRbJOxIoWGaG7NDAEeCCKrLPYnPaHulR/pPEDJFmO5wFayWXSMu33QJtovbx9BI/zeRBKpCtsWvQlVtkugFJzfsGGueNKEcKbEPXNZXVlPgd/DRNcgL2E0HBF49PhQVbygQBQBf5sI8ZxgM+HBmL0Q6WnQP/c22xmNP2HfP6JUNH7TDQdBpLoN0y0GV9Pm7FC98Yn3td4uchC8M4u4A6PDZBQfxlFWLmdNP+hClzhMTbGHr3va/2QUbLhaIhT3pGSxImmK+D1a7q4CvLdamaPgbEwQu7RnFoYhMG1+dKdTVgVBDTuS71t0FD0TGkOMHjmyV+VgmvLeGzW0Wxqnkvdq4iK+70tjAfhWWSa8TJVbs=",
     "decryptedTicket": {
         "_id": "5a96bb67191681445cf6fd38",
         "route": "NS",
         "passengerId": {
             "_id": "5a8157014d99ed52700bc99f",
             "email": "ayele.gobeze@gmail.com",
             "phone": "251-917-123456",
             "createdAt": "2018-02-28T14:23:00.000Z",
             "modifiedAt": "2018-02-28T14:23:00.000Z"
         },
         "from": {
             "_id": "5a8415c0542c19147c03c52f",
             "stationId": 211,
             "name": "Nefas Silik 2",
             "route": "NS"
         },
         "to": {
             "_id": "5a8416e2542c19147c03c53e",
             "stationId": 226,
             "name": "Minilik II Square",
             "route": "NS"
         },
         "price": 4.24,
         "__v": 0,
         "modifiedAt": "2018-02-28T14:23:35.493Z",
         "createdAt": "2018-02-28T14:23:35.493Z",
         "status": "unused",
         "type": "for adult",
         "id": "B1yOoNEdM"
     }
 }

  *@apiUse UnauthorizedError
  @apiUse InternalServerError
  */
router.post('/', ticketController.create);

/**
 * @api {GET} /tickets/ Find All Tickets
 * @apiName FindAllTickets
 * @apiGroup Ticket
 * @apiDescription List all registerd Tickets
 * @apiVersion 0.1.0
 *
 * @apiUse TicketSuccess
 *
 * @apiSuccessExample{json} Response-Success-Example
 *
 *HTTP 200 OK
 [
    {
        "_id": "5a96bb56b623564f3c04c7b6",
        "passengerId": {
            "_id": "5a8157014d99ed52700bc99f",
            "email": "ayele.gobeze@gmail.com",
            "createdAt": "2018-02-28T14:53:00.000Z",
            "modifiedAt": "2018-02-28T14:53:00.000Z"
        },
        "from": {
            "_id": "5a8415c0542c19147c03c52f",
            "stationId": 211,
            "name": "Nefas Silik 2",
            "route": "NS"
        },
        "to": {
            "_id": "5a8416e2542c19147c03c53e",
            "stationId": 226,
            "name": "Minilik II Square",
            "route": "NS"
        },
        "createdAt": "2018-02-28T14:23:18.885Z"
    },
    {
        "_id": "5a96b90a6186003dcc256cb6",
        "passengerId": {
            "_id": "5a8157014d99ed52700bc99f",
            "email": "ayele.gobeze@gmail.com",
            "createdAt": "2018-02-28T14:53:00.000Z",
            "modifiedAt": "2018-02-28T14:53:00.000Z"
        },
        "from": {
            "_id": "5a8415c0542c19147c03c52f",
            "stationId": 211,
            "name": "Nefas Silik 2",
            "route": "NS"
        },
        "to": {
            "_id": "5a8416e2542c19147c03c53e",
            "stationId": 226,
            "name": "Minilik II Square",
            "route": "NS"
        },
        "createdAt": "2018-02-28T14:13:30.278Z"
    }
  ]
 *
 * @apiSuccessExample{json} Response-Success-Example
  *
  *HTTP 200 OK

  *@apiUse TicketNotFoundError
  *@apiUse UnauthorizedError
  @apiUse InternalServerError
 */
 router.get('/', ticketController.findAll);
 /**
  * @api {GET} /tickets/paginate Paginated Tickets List
  * @apiName FindAllTicketsAndPaginate
  * @apiGroup Ticket
  * @apiDescription List all registerd tickets by pagination
  * @apiVersion 0.1.0
  *
  * @apiUse TicketSuccess
  *
  * @apiSuccessExample{json} Response-Success-Example
   *
   *HTTP 200 OK
   {
    "page": 1,
    "total_docs": 57,
    "total_pages": 6,
    "per_page": 10,
    "docs": [
        {
            "_id": "5a8b5a4e7474781c44dfc65e",
            "route": "EW",
            "passengerId": "5a815c1b205e0c14546476f6",
            "from": "5a7455ec8e130d47c86a03f7",
            "to": "5a83e6d2abe26a1a1c0be0c4",
            "price": 3.98,
            "__v": 0,
            "modifiedAt": "2018-02-25T12:29:52.826Z",
            "createdAt": "2018-02-19T23:14:22.794Z",
            "status": "unused",
            "type": "for adult",
            "id": "r1NHbR5Pf"
        },
        {
            "_id": "5a8b5a5b7474781c44dfc65f",
            "route": "EW",
            "passengerId": "5a815c1b205e0c14546476f6",
            "from": "5a7455ec8e130d47c86a03f7",
            "to": "5a83e6d2abe26a1a1c0be0c4",
            "price": 3.98,
            "__v": 0,
            "modifiedAt": "2018-02-19T23:14:35.599Z",
            "createdAt": "2018-02-19T23:14:35.599Z",
            "status": "unused",
            "type": "for adult",
            "id": "SyzObCqPM"
        },
        {
            "_id": "5a8b5a5d7474781c44dfc660",
            "route": "EW",
            "passengerId": "5a815c1b205e0c14546476f6",
            "from": "5a7455ec8e130d47c86a03f7",
            "to": "5a83e6d2abe26a1a1c0be0c4",
            "price": 3.98,
            "__v": 0,
            "modifiedAt": "2018-02-19T23:14:37.361Z",
            "createdAt": "2018-02-19T23:14:37.361Z",
            "status": "unused",
            "type": "for adult",
            "id": "r1ZcW09Dz"
        }
    ]
   *
   *@apiUse TicketNotFoundError
   *@apiUse UnauthorizedError
   *@apiUse InternalServerError
  */
router.get('/paginate', ticketController.paginate);
/**
 * @api {get} /tickets/:id  Get Ticket By Id
 * @apiVersion 0.1.0
 * @apiName GetTicket
 * @apiGroup Ticket
 * @apiPermission admin
 *
 *
 * http://localhost:5000/tickets/5a96bb56b623564f3c04c7b6
 *
 *@apiDescription Retrieve ticket by their Id
 * @apiParam {String} id The ticket id
 *
 * @apiExample {js} Request-Example:
 * $http.header("Authorization") = jwtwebtoken;
 *
 * @apiUse TicketSuccess
 *
 * @apiSuccessExample {json} Response-Success-Example:
  *  HTTP 200 OK
  {
      "_id": "5a96bb56b623564f3c04c7b6",
      "route": "NS",
      "passengerId": {
          "_id": "5a8157014d99ed52700bc99f",
          "email": "ayele.gobeze@gmail.com",
          "phone": "251-917-123456",
          "createdAt": "2018-02-28T14:33:00.000Z",
          "modifiedAt": "2018-02-28T14:33:00.000Z"
      },
      "from": {
          "_id": "5a8415c0542c19147c03c52f",
          "stationId": 211,
          "name": "Nefas Silik 2",
          "route": "NS"
      },
      "to": {
          "_id": "5a8416e2542c19147c03c53e",
          "stationId": 226,
          "name": "Minilik II Square",
          "route": "NS"
      },
      "price": 4.24,
      "__v": 0,
      "modifiedAt": "2018-02-28T14:23:18.885Z",
      "createdAt": "2018-02-28T14:23:18.885Z",
      "status": "unused",
      "type": "for adult",
      "id": "HJJPiEVuM"
  }
  *@apiUse InvalidSationIdError
  *@apiUse UnauthorizedError
  *@apiUse TicketNotFoundError
  *@apiUse InternalServerError
 */
router.get('/:id', ticketController.findById);
//validateTicket
router.post('/validate/ticket/', ticketController.validateTicket);

router.get('/customid/:cid', ticketController.findByCustomId);
/**
 * @api {put} /tickets/:id Update Ticket
 * @apiName putTicket
 * @apiGroup Ticket
 * @apiDescription Update Ticket
 * @apiVersion 0.1.0
 * @apiPermission admin
 *
 * @apiUse TicketSuccess
 *
 * @apiParamExample {json} Request-Example
 *     {
 *       "id": "5a8b5a4e7474781c44dfc65e"
 *     }
 *
 * @apiRequestExample Request-Example
 *{
 * "ticket" : 0.4095,
 * "userId" : "5a5b16fcdc3b872d0c20ac88",
 * "from" : "5a741be70449d804944dce63",
 * "to" : "5a74264fc461a418b08dae07",
 * "distance" : 1092,
 * "route" : "NS"
 *}
 *@apiSuccessExample Response-Success-Example
 {
    "_id": "5a8b5a4e7474781c44dfc65e",
    "route": "EW",
    "passengerId": {
        "_id": "5a815c1b205e0c14546476f6",
        "email": "tesfaye.belachew@gmail.com",
        "phone": "251-917-123456",
        "createdAt": "2018-02-25T12:28:00.000Z",
        "modifiedAt": "2018-02-25T12:28:00.000Z"
    },
    "from": {
        "_id": "5a7455ec8e130d47c86a03f7",
        "stationId": 14,
        "name": "St Michael",
        "route": "EW"
    },
    "to": {
        "_id": "5a83e6d2abe26a1a1c0be0c4",
        "stationId": 118,
        "name": "Mexico",
        "route": "EW"
    },
    "price": 3.98,
    "modifiedAt": "2018-02-25T12:16:49.826Z",
    "createdAt": "2018-02-19T23:14:22.794Z",
    "status": "unused",
    "type": "for adult",
    "id": "r1NHbR5Pf"
}
 *@apiUse UnauthorizedError
 *@apiUse InternalServerError
 */
router.put('/:id', ticketController.update);
//
router.put('/status/:id', ticketController.updateStatus);

/**
 * @api {delete} /tickets/:id Delete Ticket
 * @apiName deleteTicket
 * @apiGroup Ticket
 * @apiDescription Delete ticket by id
 * @apiVersion 0.1.0
 * @apiUse TicketSuccess
 *
 * @apiParamExample {json} Request-Example
 *
 *     {
 *       "id": "5a96bb67191681445cf6fd38"
 *     }
 *
 *@apiSuccessExample Response-Success-Example
 *HTTP 200 OK
 * {
 * "message":"ticket removed successfully",
   {
      "_id": "5a96bb67191681445cf6fd38",
      "route": "NS",
      "passengerId": "5a8157014d99ed52700bc99f",
      "from": "5a8415c0542c19147c03c52f",
      "to": "5a8416e2542c19147c03c53e",
      "price": 4.24,
      "__v": 0,
      "modifiedAt": "2018-02-28T14:23:35.493Z",
      "createdAt": "2018-02-28T14:23:35.493Z",
      "status": "unused",
      "type": "for adult",
      "id": "B1yOoNEdM"
  }
}
 *@apiUse UnauthorizedError
 *@apiUse TicketNotFoundError
 *@apiUse InternalServerError
 */
router.delete('/:id', ticketController.delete);

router.get('/my/tickets',ticketController.findMine);

module.exports = router;
